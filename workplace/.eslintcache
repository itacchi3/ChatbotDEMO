[{"/usr/src/app/workplace/src/reportWebVitals.js":"1","/usr/src/app/workplace/src/App.jsx":"2","/usr/src/app/workplace/src/dataset.jsx":"3","/usr/src/app/workplace/src/components/Answer.jsx":"4","/usr/src/app/workplace/src/components/AnswersList.jsx":"5","/usr/src/app/workplace/src/components/index.js":"6","/usr/src/app/workplace/src/components/Chats.jsx":"7","/usr/src/app/workplace/src/components/Chat.jsx":"8"},{"size":362,"mtime":1611759999804,"results":"9","hashOfConfig":"10"},{"size":1445,"mtime":1611933010661,"results":"11","hashOfConfig":"10"},{"size":4006,"mtime":1611906825866,"results":"12","hashOfConfig":"10"},{"size":695,"mtime":1611937715875,"results":"13","hashOfConfig":"10"},{"size":444,"mtime":1611937536239,"results":"14","hashOfConfig":"10"},{"size":188,"mtime":1611918363787,"results":"15","hashOfConfig":"10"},{"size":621,"mtime":1611938286115,"results":"16","hashOfConfig":"10"},{"size":770,"mtime":1611927125283,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rlcvby",{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/src/app/workplace/src/reportWebVitals.js",[],"/usr/src/app/workplace/src/App.jsx",["35","36","37","38","39"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { defaultDataset } from \"./dataset\";\nimport \"./assets/styles/style.css\";\nimport { AnswersList, Chats } from \"./components/index\";\n\nconst App = () => {\n  const [answers, setAnswers] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [currentId, setCurrentId] = useState(\"init\");\n  const [dataset, setDataset] = useState(defaultDataset);\n  const [open, setOpen] = useState(false);\n\n  const displayNextQuestion = (nextQuestionId) => {\n    chats.push({ text: dataset[nextQuestionId].question, type: \"question\" });\n    setChats(chats);\n    setCurrentId(nextQuestionId);\n    setAnswers(dataset[nextQuestionId].answers);\n  };\n\n  const selectAnswer = (selectedAnswer, nextQuestionId) => {\n    switch (true) {\n      case nextQuestionId === \"init\":\n        displayNextQuestion(nextQuestionId);\n        break;\n      default:\n        const chat = {\n          text: selectedAnswer,\n          type: \"answer\",\n        };\n        chats.push(chat);\n        setChats(chats);\n        displayNextQuestion(nextQuestionId);\n        break;\n    }\n  };\n\n  useEffect(() => {\n    const initAnswer = \"\";\n    selectAnswer(initAnswer, currentId);\n  }, []);\n\n  return (\n    <section className=\"c-section\">\n      <div className=\"c-box\">\n        <Chats chats={chats} />\n        <AnswersList answers={answers} select={selectAnswer} />\n      </div>\n    </section>\n  );\n};\n\nexport default App;\n","/usr/src/app/workplace/src/dataset.jsx",[],"/usr/src/app/workplace/src/components/Answer.jsx",[],"/usr/src/app/workplace/src/components/AnswersList.jsx",[],"/usr/src/app/workplace/src/components/index.js",[],"/usr/src/app/workplace/src/components/Chats.jsx",[],"/usr/src/app/workplace/src/components/Chat.jsx",[],{"ruleId":"40","severity":1,"message":"41","line":1,"column":38,"nodeType":"42","messageId":"43","endLine":1,"endColumn":49},{"ruleId":"40","severity":1,"message":"44","line":10,"column":19,"nodeType":"42","messageId":"43","endLine":10,"endColumn":29},{"ruleId":"40","severity":1,"message":"45","line":11,"column":10,"nodeType":"42","messageId":"43","endLine":11,"endColumn":14},{"ruleId":"40","severity":1,"message":"46","line":11,"column":16,"nodeType":"42","messageId":"43","endLine":11,"endColumn":23},{"ruleId":"47","severity":1,"message":"48","line":40,"column":6,"nodeType":"49","endLine":40,"endColumn":8,"suggestions":"50"},"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'setDataset' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentId' and 'selectAnswer'. Either include them or remove the dependency array.","ArrayExpression",["51"],{"desc":"52","fix":"53"},"Update the dependencies array to be: [currentId, selectAnswer]",{"range":"54","text":"55"},[1209,1211],"[currentId, selectAnswer]"]